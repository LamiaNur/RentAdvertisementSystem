@page "/login"
@using RentAdvertisementSystem.Models;
@using RentAdvertisementSystem.Services;
@inject UserService UserService
@inject NavigationManager NavigationManager
@inject LocalStorage LocalStorage

<h1>Log In</h1>
<hr />
<EditForm Model="@loginModel" OnValidSubmit="CanLogIn">
    <div class="form-group">
        <label>Email address</label>
        <InputText class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter email" @bind-Value="loginModel.Email"/>
        <small id="emailHelp" class="form-text text-muted">We'll never share your email with anyone else.</small>
    </div>
    
    <div class="form-group">
        <label >Password</label>
        <InputText type="password" class="form-control" id="exampleInputPassword1" placeholder="Password" @bind-Value="loginModel.Password"/>
    </div>

    <button type="submit" class="btn btn-primary">Log In</button>
</EditForm>
@code {
    [Parameter]
    public string userId { get; set;}
    protected LogInModel loginModel = new LogInModel();
    protected async Task CanLogIn()
    {
        LocalStorage.RemoveAsync("RentItem");
        UserService.CanLogIn(loginModel);
        await LocalStorage.SaveStringAsync("email", loginModel.Email);
        await Task.Delay(500);
        NavigationManager.NavigateTo("/");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
    
        await LocalStorage.RemoveAsync("RentItem");
        await LocalStorage.RemoveAsync("SearchValue");
    }
}